{"version":3,"sources":["components/Header/Header.style.js","components/Header/index.js","components/Scoreboard/Scoreboard.style.js","components/Scoreboard/index.js","components/CardsGrid/CardGrid.style.js","components/Card/Card.style.js","components/Card/index.js","components/CardsGrid/index.js","utilities.js","components/Home.style.js","components/Home.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","Link","a","Header","href","target","rel","Scoreboard","currentScore","bestScore","Image","img","Card","pokemon","handleCardClick","onClick","src","image","alt","name","CardsGrid","pokemons","pokemonCards","map","id","shuffleArray","array","sort","Math","random","pokemonArr","Array","fill","_","i","main","Home","useState","setPokemons","clickedPokemons","setClickedPokemons","setCurrentScore","setBestScore","useEffect","fetchPokemons","loadCards","amount","pokemonUrl","fetch","response","json","sprites","front_default","push","console","log","playRound","pokemonName","includes","resetGame","newScore","prevState","e","parentNode","lastChild","textContent","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bb50e08.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n  height: 6vh;\n  padding-bottom: 20px;\n`\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  max-width: 100%;\n  padding: 10px 0;\n  color: #f9fbff;\n`\n\nexport const Link = styled.a`\n  display: flex;\n  align-items: center;\n  padding-bottom: 10px;\n  margin: 20px;\n  transform: scale(1.5);\n  color: var(--white);\n  text-decoration: none;\n\n  :hover {\n    color: #e4000f;\n  }\n`\n","import React from 'react'\nimport { Wrapper, Content, Link } from './Header.style'\nimport { FaGithub } from 'react-icons/fa'\n\nconst Header = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <h1>PokeMemory</h1>\n        <>\n          <Link\n            href=\"https://github.com/CesarALuna\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <h4>CesarALuna@</h4>\n            <FaGithub />\n          </Link>\n        </>\n      </Content>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: right;\n  background-color: var(--darkGrey);\n  color: white;\n  margin-bottom: 10px;\n  border-bottom: 4px solid #b3a125;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 250px;\n    gap: 2rem;\n  }\n`\n\nexport const Content = styled.div`\n  display: flex;\n  font-size: 3rem;\n\n  h3 {\n    font-size: var(--fontMed);\n    padding-right: 20px;\n  }\n`\n","import React from 'react'\nimport { Wrapper, Content } from './Scoreboard.style'\n\nconst Scoreboard = ({ currentScore, bestScore }) => {\n  return (\n    <Wrapper>\n      <Content>\n        <h3>Current Score: {currentScore}</h3>\n        <h3>Best Score: {bestScore}</h3>\n      </Content>\n    </Wrapper>\n  )\n}\n\nexport default Scoreboard\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(auto, 1fr);\n  padding: 2rem;\n  gap: 2rem;\n  background-color: #3c5aa6;\n  overflow: none;\n\n  @media (max-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n  }\n`\n\nexport const Content = styled.div``\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 180px;\n  border: 1px solid var(--lightGrey);\n  border-radius: 20px;\n  background-color: var(--white);\n  box-shadow: rgba(0, 0, 0, 0.35) 0 5px 15px;\n  transition: transform 0.3s;\n  cursor: pointer;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`\n\nexport const Content = styled.div`\n  padding: 0;\n  font-size: 1.6rem;\n  text-align: center;\n`\n\nexport const Image = styled.img`\n  padding: 0;\n  transform: scale(1.1);\n  filter: drop-shadow(8px 2px 5px var(--medGrey));\n  overflow: hidden;\n`\n","import React from 'react'\nimport { Wrapper, Content, Image } from './Card.style'\n\nconst Card = ({ pokemon, handleCardClick }) => {\n  return (\n    <Wrapper onClick={handleCardClick}>\n      <Image src={pokemon.image} alt={pokemon.name} />\n      <Content>{pokemon.name}</Content>\n    </Wrapper>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { Wrapper } from './CardGrid.style'\nimport Card from '../Card'\n\nconst CardsGrid = ({ pokemons, handleCardClick }) => {\n  const pokemonCards = pokemons.map((pokemon) => (\n    <Card\n      key={pokemon.id}\n      pokemon={pokemon}\n      handleCardClick={handleCardClick}\n    />\n  ))\n\n  return <Wrapper>{pokemonCards}</Wrapper>\n}\n\nexport default CardsGrid\n","export const shuffleArray = (array) => {\n  return [...array].sort(() => Math.random() - 0.5)\n}\n\nexport const pokemonArr = Array(151)\n  .fill()\n  .map((_, i) => i + 1)\n  .sort(() => Math.random() - 0.5)\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #3c5aa6;\n`\n","import React, { useState, useEffect } from 'react'\n//components\nimport Header from './Header'\nimport Scoreboard from './Scoreboard'\nimport CardsGrid from './CardsGrid'\nimport { shuffleArray, pokemonArr } from '../utilities'\n//style\nimport { Wrapper } from './Home.style'\n\nconst Home = () => {\n  const POKEMONS_AMOUNT = 12\n  const [pokemons, setPokemons] = useState([])\n  const [clickedPokemons, setClickedPokemons] = useState([])\n  const [currentScore, setCurrentScore] = useState(0)\n  const [bestScore, setBestScore] = useState(0)\n\n  useEffect(() => {\n    const loadCards = async () => {\n      setPokemons(shuffleArray(await fetchPokemons(POKEMONS_AMOUNT)))\n    }\n\n    loadCards()\n  }, [])\n\n  const fetchPokemons = async (amount) => {\n    const pokemons = []\n\n    for (let i = 1; i <= amount; i++) {\n      // change ${i} here to randomize pokemon\n      // const pool = Math.ceil(Math.random() * 151)\n      const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonArr[i]}`\n      const response = await fetch(pokemonUrl)\n      const pokemon = await response.json()\n      const id = pokemon.id\n      const name = pokemon.name\n      const image = pokemon.sprites.front_default\n\n      pokemons.push({ id, name, image })\n      console.log(pokemon.id)\n    }\n\n    return pokemons\n  }\n\n  const handleCardClick = (e) => {\n    const pokemonName = e.target.parentNode.lastChild.textContent\n    playRound(pokemonName)\n    setPokemons(shuffleArray(pokemons))\n  }\n\n  const playRound = (pokemonName) => {\n    if (clickedPokemons.includes(pokemonName)) {\n      resetGame()\n    } else {\n      const newScore = currentScore + 1\n      if (newScore > bestScore) setBestScore(newScore)\n      setCurrentScore(newScore)\n      setClickedPokemons((prevState) => [...prevState, pokemonName])\n    }\n  }\n\n  const resetGame = () => {\n    setClickedPokemons([])\n    setCurrentScore(0)\n  }\n\n  return (\n    <>\n      <Header />\n      <Scoreboard currentScore={currentScore} bestScore={bestScore} />\n      <Wrapper>\n        <CardsGrid pokemons={pokemons} handleCardClick={handleCardClick} />\n      </Wrapper>\n    </>\n  )\n}\n\nexport default Home\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --maxWidth: 1280px;\n        --white: #f9fbff;\n        --lightGrey: #eee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontSuperBig: 2.5rem;\n        --fontBig: 1.5rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n    }\n    * {\n        box-sizing: border-box;\n        font-family: 'VT323', monospace;\n    }\n    body {\n        margin: 0; \n        padding: 0;\n        box-sizing: border-box;\n        background-color: #3c5aa6;\n    }\n\n    h1 {2\n        font-weight: 600;\n        color: var(--white);\n    }\n    h3 {\n        font-size: 1.1rem;\n        font-weight: 600;\n    }\n    p {\n        font-size: 1rem;\n        color: var(--white);\n    }\n}\n`\n","import React from 'react'\n\n//components\nimport Home from './components/Home'\n\n//styles\nimport { GlobalStyle } from './GlobalStyle'\n\nconst App = () => (\n  <>\n    <Home />\n    <GlobalStyle />\n  </>\n)\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}